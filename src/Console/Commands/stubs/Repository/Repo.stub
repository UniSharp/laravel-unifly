<?php
namespace DummyNamespace;

use App\Entity\DummyEntity;

class DummyClass
{
    public $entity;

    public function __construct(DummyEntity $entity)
    {
        $this->entity = $entity;
    }

    public function search($query)
    {
        return $this->entity->paginate();
    }

    public function get($id)
    {
        return $this->entity->findOrFail($id);
    }

    public function getAll()
    {
        return $this->entity->paginate();
    }

    public function create(Array $input, $locale = null)
    {
        // TODO Write your autocreate attribute here
        $should_be_created_attr = [

        ];

        // it's a reminder exception, if you don't add any attribute
        if (empty($should_be_created_attr)) {
            throw new \InvalidArgumentException("Are you sure you don't want create anything?");
        }

        if ($locale == null) {
            $locale = config('app.fallback_locale');
        }

        $translatedAttributes = $this->entity->translatedAttributes ?: [];
        $translatedInput = [];

        // Should remove input attribute which not necessary
        foreach ($input as $k => $attr) {
            // check auto create attribute is exist in input array
            if (!in_array($k, $should_be_created_attr)) {
                unset($input[$k]);
            } elseif (in_array($k, $translatedAttributes)) {
                $translatedInput[$k] = $attr;
                unset($input[$k]);
            }
        }

        $input[$locale] = $translatedInput;
        // if attr not in input, it should be add default value
        foreach ($should_be_created_attr as $attr) {
            // check auto create attribute is exist in input array
            if (!array_key_exists($attr, $input) && !in_array($attr, $translatedAttributes)) {
                // do more guard here
                $input[$attr] = null;
            }
        }

        $entity = $this->entity->create($input);

        $entity->save();
        return $entity;
    }

    public function update($id, Array $input, $locale = null)
    {
        // TODO Write your autoupdate attribute here
        $should_be_updated_attr = [

        ];

        // it's a reminder exception, if you don't add any attribute
        if (empty($should_be_updated_attr)) {
            throw new \InvalidArgumentException("Are you sure you don't want update anything?");
        }

        if ($locale == null) {
            $locale = config('app.fallback_locale');
        }

        $entity = $this->entity->findOrFail($id);
        $translatedAttributes = $this->entity->translatedAttributes ?: [];
        $translatedInput = [];

        // Should remove input attribute which not necessary
        foreach ($input as $k => $attr) {
            // check auto create attribute is exist in input array
            if (!in_array($k, $should_be_updated_attr)) {
                unset($input[$k]);
            } elseif (in_array($attr, $translatedAttributes)) {
                $translatedInput[$k] = $attr;
                unset($input[$k]);
            }
        }

        // if attr not in input, it shoulb be add default value
        foreach ($should_be_updated_attr as $attr) {
            // check auto create attribute is exist in input array
            if (!array_key_exists($attr, $input)) {
                // do more guard here
                $input[$attr] = null;
            }
        }

        foreach ($input as $k => $v) {
            $entity->$k = $v;
        }

        if (method_exists($entity, 'translatOrNew')) {
            foreach ($translatedInput as $k => $v) {
                $entity->translateOrNew($locale)->$k = $v;
            }
        }

        $entity->save();
        return $entity;
    }

    public function delete($id)
    {
        $entity = $this->entity->findOrFail($id);
        $entity->status = 'deleted';
        $entity->save();
    }

    public function export()
    {
        \Excel::create('File Name', function ($excel) {
            $excel->sheet('Sheet Name', function ($sheet) {
            });
        })->export('xls');
    }
}
